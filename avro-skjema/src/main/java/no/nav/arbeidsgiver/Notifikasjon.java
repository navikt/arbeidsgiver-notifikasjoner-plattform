/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.nav.arbeidsgiver;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Notifikasjon extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3918548911033760720L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Notifikasjon\",\"namespace\":\"no.nav.arbeidsgiver\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"beskjed\",\"type\":\"string\"},{\"name\":\"orgnr\",\"type\":\"string\"},{\"name\":\"servicecode\",\"type\":\"string\"},{\"name\":\"serviceedition\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence beskjed;
  @Deprecated public java.lang.CharSequence orgnr;
  @Deprecated public java.lang.CharSequence servicecode;
  @Deprecated public int serviceedition;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Notifikasjon() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param beskjed The new value for beskjed
   * @param orgnr The new value for orgnr
   * @param servicecode The new value for servicecode
   * @param serviceedition The new value for serviceedition
   */
  public Notifikasjon(java.lang.CharSequence id, java.lang.CharSequence beskjed, java.lang.CharSequence orgnr, java.lang.CharSequence servicecode, java.lang.Integer serviceedition) {
    this.id = id;
    this.beskjed = beskjed;
    this.orgnr = orgnr;
    this.servicecode = servicecode;
    this.serviceedition = serviceedition;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return beskjed;
    case 2: return orgnr;
    case 3: return servicecode;
    case 4: return serviceedition;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: beskjed = (java.lang.CharSequence)value$; break;
    case 2: orgnr = (java.lang.CharSequence)value$; break;
    case 3: servicecode = (java.lang.CharSequence)value$; break;
    case 4: serviceedition = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'beskjed' field.
   * @return The value of the 'beskjed' field.
   */
  public java.lang.CharSequence getBeskjed() {
    return beskjed;
  }

  /**
   * Sets the value of the 'beskjed' field.
   * @param value the value to set.
   */
  public void setBeskjed(java.lang.CharSequence value) {
    this.beskjed = value;
  }

  /**
   * Gets the value of the 'orgnr' field.
   * @return The value of the 'orgnr' field.
   */
  public java.lang.CharSequence getOrgnr() {
    return orgnr;
  }

  /**
   * Sets the value of the 'orgnr' field.
   * @param value the value to set.
   */
  public void setOrgnr(java.lang.CharSequence value) {
    this.orgnr = value;
  }

  /**
   * Gets the value of the 'servicecode' field.
   * @return The value of the 'servicecode' field.
   */
  public java.lang.CharSequence getServicecode() {
    return servicecode;
  }

  /**
   * Sets the value of the 'servicecode' field.
   * @param value the value to set.
   */
  public void setServicecode(java.lang.CharSequence value) {
    this.servicecode = value;
  }

  /**
   * Gets the value of the 'serviceedition' field.
   * @return The value of the 'serviceedition' field.
   */
  public java.lang.Integer getServiceedition() {
    return serviceedition;
  }

  /**
   * Sets the value of the 'serviceedition' field.
   * @param value the value to set.
   */
  public void setServiceedition(java.lang.Integer value) {
    this.serviceedition = value;
  }

  /**
   * Creates a new Notifikasjon RecordBuilder.
   * @return A new Notifikasjon RecordBuilder
   */
  public static no.nav.arbeidsgiver.Notifikasjon.Builder newBuilder() {
    return new no.nav.arbeidsgiver.Notifikasjon.Builder();
  }

  /**
   * Creates a new Notifikasjon RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Notifikasjon RecordBuilder
   */
  public static no.nav.arbeidsgiver.Notifikasjon.Builder newBuilder(no.nav.arbeidsgiver.Notifikasjon.Builder other) {
    return new no.nav.arbeidsgiver.Notifikasjon.Builder(other);
  }

  /**
   * Creates a new Notifikasjon RecordBuilder by copying an existing Notifikasjon instance.
   * @param other The existing instance to copy.
   * @return A new Notifikasjon RecordBuilder
   */
  public static no.nav.arbeidsgiver.Notifikasjon.Builder newBuilder(no.nav.arbeidsgiver.Notifikasjon other) {
    return new no.nav.arbeidsgiver.Notifikasjon.Builder(other);
  }

  /**
   * RecordBuilder for Notifikasjon instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Notifikasjon>
    implements org.apache.avro.data.RecordBuilder<Notifikasjon> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence beskjed;
    private java.lang.CharSequence orgnr;
    private java.lang.CharSequence servicecode;
    private int serviceedition;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(no.nav.arbeidsgiver.Notifikasjon.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.beskjed)) {
        this.beskjed = data().deepCopy(fields()[1].schema(), other.beskjed);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgnr)) {
        this.orgnr = data().deepCopy(fields()[2].schema(), other.orgnr);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.servicecode)) {
        this.servicecode = data().deepCopy(fields()[3].schema(), other.servicecode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.serviceedition)) {
        this.serviceedition = data().deepCopy(fields()[4].schema(), other.serviceedition);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Notifikasjon instance
     * @param other The existing instance to copy.
     */
    private Builder(no.nav.arbeidsgiver.Notifikasjon other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.beskjed)) {
        this.beskjed = data().deepCopy(fields()[1].schema(), other.beskjed);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgnr)) {
        this.orgnr = data().deepCopy(fields()[2].schema(), other.orgnr);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.servicecode)) {
        this.servicecode = data().deepCopy(fields()[3].schema(), other.servicecode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.serviceedition)) {
        this.serviceedition = data().deepCopy(fields()[4].schema(), other.serviceedition);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'beskjed' field.
      * @return The value.
      */
    public java.lang.CharSequence getBeskjed() {
      return beskjed;
    }

    /**
      * Sets the value of the 'beskjed' field.
      * @param value The value of 'beskjed'.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder setBeskjed(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.beskjed = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'beskjed' field has been set.
      * @return True if the 'beskjed' field has been set, false otherwise.
      */
    public boolean hasBeskjed() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'beskjed' field.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder clearBeskjed() {
      beskjed = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgnr' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrgnr() {
      return orgnr;
    }

    /**
      * Sets the value of the 'orgnr' field.
      * @param value The value of 'orgnr'.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder setOrgnr(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.orgnr = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'orgnr' field has been set.
      * @return True if the 'orgnr' field has been set, false otherwise.
      */
    public boolean hasOrgnr() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'orgnr' field.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder clearOrgnr() {
      orgnr = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'servicecode' field.
      * @return The value.
      */
    public java.lang.CharSequence getServicecode() {
      return servicecode;
    }

    /**
      * Sets the value of the 'servicecode' field.
      * @param value The value of 'servicecode'.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder setServicecode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.servicecode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'servicecode' field has been set.
      * @return True if the 'servicecode' field has been set, false otherwise.
      */
    public boolean hasServicecode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'servicecode' field.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder clearServicecode() {
      servicecode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceedition' field.
      * @return The value.
      */
    public java.lang.Integer getServiceedition() {
      return serviceedition;
    }

    /**
      * Sets the value of the 'serviceedition' field.
      * @param value The value of 'serviceedition'.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder setServiceedition(int value) {
      validate(fields()[4], value);
      this.serviceedition = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceedition' field has been set.
      * @return True if the 'serviceedition' field has been set, false otherwise.
      */
    public boolean hasServiceedition() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'serviceedition' field.
      * @return This builder.
      */
    public no.nav.arbeidsgiver.Notifikasjon.Builder clearServiceedition() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Notifikasjon build() {
      try {
        Notifikasjon record = new Notifikasjon();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.beskjed = fieldSetFlags()[1] ? this.beskjed : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.orgnr = fieldSetFlags()[2] ? this.orgnr : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.servicecode = fieldSetFlags()[3] ? this.servicecode : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.serviceedition = fieldSetFlags()[4] ? this.serviceedition : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
